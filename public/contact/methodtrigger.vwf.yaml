extends: 'http://vwf.example.com/behavior.vwf'
properties:
  type: behavior
  EditorData_temp:
    methodCall:
      displayname: Method to trigger on event
      property: methodCall
      type: choice  
    NodeID:
      displayname: "Choose Node"
      property: NodeID
      type: nodeid
    methodWatch:
      displayname: Method to watch for
      property: methodWatch
      type: choice
  EditorData:
    value:
    get: |       
       var keys = Object.keys(this.parent.methods);
       this.EditorData_temp.methodCall.labels = keys;
       this.EditorData_temp.methodCall.values = keys;
       var node = vwf.getNode(this.NodeID);

       if(node)
       {
       keys = Object.keys(node.methods);
       this.EditorData_temp.methodWatch.labels = keys;
       this.EditorData_temp.methodWatch.values = keys;
        }
       return this.EditorData_temp;
  DisplayName: DistanceTrigger
  NodeID: null
  methodCall: null
  methodWatch: null
methods:
  calledMethod:
    parameters:
      - id
      - methodName
      - methodArgs
    body: |     
      if(methodName == this.methodWatch && id == this.NodeID)
      {
              if( this.parent[this.methodCall])
                this.parent[this.methodCall].apply(this.parent,methodArgs);
      }